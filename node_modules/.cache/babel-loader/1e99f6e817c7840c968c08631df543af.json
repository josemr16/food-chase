{"ast":null,"code":"var _jsxFileName = \"/Users/joserodriguez/Desktop/food-chase1/src/App.js\";\nimport React from 'react';\nimport Navegation from './components/Navegation/Navegation';\nimport PostCardList from './components/PostCardList/PostCardList';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport CreateMeal from './components/CreateMeal/CreateMeal';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = user => {\n      this.setState({\n        user: {\n          name: user.name,\n          lastname: user.lastname,\n          email: user.email\n        }\n      });\n      console.log(this.state.user.email);\n    };\n\n    this.updateMealPost = () => {\n      fetch('http://localhost:3000/meals').then(response => response.json()).then(data => this.setState({\n        cards: data\n      })); // this.isSignInChange()\n      // console.log(this.state.isSignIn)\n    };\n\n    this.updateReservedPost = () => {\n      fetch('http://localhost:3000/reserved', {\n        method: 'put',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.state.user.email\n        })\n      }).then(response => response.json()).then(data => this.setState({\n        reserved: data\n      })); // this.isSignInChange()\n      // console.log(this.state.isSignIn)\n    };\n\n    this.isSignInChange = () => {\n      this.state.isSignIn === false ? this.setState({\n        isSignIn: true\n      }) // console.log(this.state.isSignIn)\n      : this.setState({\n        isSignIn: false\n      }); // console.log(this.state.isSignIn)\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'mealposts') {\n        this.updateMealPost();\n        this.updateMealPost();\n        this.updateReservedPost();\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.reservePlate = index => {\n      if (this.state.route === 'mealposts') {\n        let plateToSend = {\n          id: this.state.cards[index].id,\n          platename: this.state.cards[index].platename,\n          description: this.state.cards[index].description,\n          email: this.state.user.email,\n          image: this.state.cards[index].image,\n          price: this.state.cards[index].price\n        };\n        fetch('http://localhost:3000/reserve', {\n          method: 'post',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(plateToSend)\n        }).then(response => {\n          this.updateReservedPost();\n          this.updateMealPost();\n          this.onRouteChange('mealposts');\n        });\n      } else if (this.state.route === 'reserved') {\n        console.log(this.state.reserved[index].id);\n      } // this.state.reserved.push(this.state.cards[index])\n      // this.state.cards.splice(index,1)\n\n    };\n\n    this.state = {\n      isSignIn: false,\n      route: 'signin',\n      cards: [],\n      reserved: [],\n      user: {\n        name: '',\n        lastname: '',\n        email: ''\n      }\n    };\n  } // componentDidMount(){\n  //   this.updateReservedPost()\n  //   console.log(this.state.reserved)\n  // }\n\n\n  render() {\n    const route = this.state.route;\n\n    if (route === 'signin') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Signin, {\n        loadUser: this.loadUser,\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }));\n    } else if (route === 'register') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(Register, {\n        loadUser: this.loadUser,\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }));\n    } else if (route === 'mealposts') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(PostCardList, {\n        reservePlate: this.reservePlate,\n        cards: this.state.cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }));\n    } else if (route === 'postedbyme') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(PostCardList, {\n        cards: this.state.cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    } else if (route === 'reserved') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(PostCardList, {\n        reservePlate: this.reservePlate,\n        cards: this.state.reserved,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }));\n    } else if (route === 'postameal') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(CreateMeal, {\n        userEmail: this.state.user.email,\n        onRouteChange: this.onRouteChange,\n        cards: this.state.cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App; // <PostCardList cards = {this.state.cards} />","map":{"version":3,"sources":["/Users/joserodriguez/Desktop/food-chase1/src/App.js"],"names":["React","Navegation","PostCardList","Signin","Register","CreateMeal","App","Component","constructor","loadUser","user","setState","name","lastname","email","console","log","state","updateMealPost","fetch","then","response","json","data","cards","updateReservedPost","method","headers","body","JSON","stringify","reserved","isSignInChange","isSignIn","onRouteChange","route","reservePlate","index","plateToSend","id","platename","description","image","price","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navegation from './components/Navegation/Navegation';\nimport PostCardList from './components/PostCardList/PostCardList'\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport CreateMeal from './components/CreateMeal/CreateMeal'\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      isSignIn: false,\n      route: 'signin',\n      cards : [],\n      reserved : [],\n      user: {\n        name:'',\n        lastname: '',\n        email: ''\n      }\n    }\n  }\n\n  // componentDidMount(){\n  //   this.updateReservedPost()\n  //   console.log(this.state.reserved)\n  // }\n\n  loadUser = (user) => {\n    this.setState({user: {\n      name: user.name,\n      lastname: user.lastname,\n      email: user.email\n    }})\n    console.log(this.state.user.email)\n\n  }\n\n  updateMealPost = () => {\n    fetch('http://localhost:3000/meals')\n    .then(response => response.json())\n    .then(data => this.setState({cards: data}))\n    // this.isSignInChange()\n    // console.log(this.state.isSignIn)\n  }\n\n  updateReservedPost = () => {\n    fetch('http://localhost:3000/reserved', {\n      method:'put',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        email:this.state.user.email\n      })\n    })\n    .then(response => response.json())\n    .then(data => this.setState({reserved:data}))\n\n\n    // this.isSignInChange()\n    // console.log(this.state.isSignIn)\n  }\n  // updateReservedPost = () => {\n  //   fetch('http://localhost:3000/reserved')\n  //   .then(response => response.json())\n  //   .then(data => this.setState({reserved: data}))\n\n\n  //   // this.isSignInChange()\n  //   // console.log(this.state.isSignIn)\n  // }\n\n\n\n  isSignInChange = () => {\n    this.state.isSignIn === false \n    ?\n    this.setState({isSignIn: true})\n    // console.log(this.state.isSignIn)\n    :\n    this.setState({isSignIn:false})\n    // console.log(this.state.isSignIn)\n  }\n\n  onRouteChange = (route) =>{\n    if (route === 'mealposts'){\n      this.updateMealPost()\n      this.updateMealPost()\n      this.updateReservedPost()\n    }\n\n    this.setState({route:route})\n\n  }\n\n  reservePlate = (index) => {\n    \n    if(this.state.route === 'mealposts'){\n        let plateToSend = {\n        id:this.state.cards[index].id,\n        platename: this.state.cards[index].platename,\n        description: this.state.cards[index].description,\n        email: this.state.user.email,\n        image:this.state.cards[index].image,\n        price: this.state.cards[index].price\n      }\n\n      fetch('http://localhost:3000/reserve', {\n        method:'post',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify(plateToSend)\n        })\n        .then(response => {\n          this.updateReservedPost()\n          this.updateMealPost()\n          this.onRouteChange('mealposts')\n        })\n    }else if(this.state.route === 'reserved'){\n      console.log(this.state.reserved[index].id)\n    }\n    \n\n    // this.state.reserved.push(this.state.cards[index])\n    // this.state.cards.splice(index,1)\n    \n    \n    \n  }\n  \n\n  render() {\n    const {route} = this.state;\n    if(route === 'signin'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <Signin loadUser = {this.loadUser} isSignInChange= {this.isSignInChange} onRouteChange = {this.onRouteChange}/>\n        </div>\n      )\n    }else if (route === 'register'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <Register loadUser = {this.loadUser} isSignInChange = {this.isSignInChange} onRouteChange = {this.onRouteChange}/>\n        </div>\n      )\n    }else if(route === 'mealposts'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <PostCardList reservePlate = {this.reservePlate} cards={this.state.cards}/>\n        </div>\n      )\n    }else if(route === 'postedbyme'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <PostCardList cards={this.state.cards}/>\n        </div>\n      )\n    }else if(route === 'reserved'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <PostCardList reservePlate = {this.reservePlate} cards={this.state.reserved}/>\n        </div>\n      )\n    }else if(route === 'postameal'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <CreateMeal userEmail = {this.state.user.email} onRouteChange={this.onRouteChange} cards={this.state.cards}/>\n        </div>\n      )\n    }else{\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n        </div>\n      )\n    }\n  }  \n}\n\nexport default App;\n// <PostCardList cards = {this.state.cards} />\n"]},"metadata":{},"sourceType":"module"}