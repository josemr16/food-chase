{"ast":null,"code":"var _jsxFileName = \"/Users/joserodriguez/Desktop/food-chase1/src/App.js\";\nimport React from 'react';\nimport Navegation from './components/Navegation/Navegation';\nimport PostCardList from './components/PostCardList/PostCardList';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.isSignInChange = () => {\n      this.state.isSignIn === false ? this.setState({\n        isSignIn: true\n      }) // console.log(this.state.isSignIn)\n      : this.setState({\n        isSignIn: false\n      }); // console.log(this.state.isSignIn)\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.reservePlate = index => {\n      let reserved = [];\n      reserved.push(this.state.cards[index]);\n      this.setState({\n        reserved: reserved\n      });\n    };\n\n    this.state = {\n      isSignIn: false,\n      route: 'signin',\n      cards: [],\n      reserved: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(data => this.setState({\n      cards: data\n    })); // this.isSignInChange()\n    // console.log(this.state.isSignIn)\n  }\n\n  render() {\n    const route = this.state.route;\n\n    if (route === 'signin') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Signin, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    } else if (route === 'register') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Register, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    } else if (route === 'mealposts') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(PostCardList, {\n        reservePlate: this.reservePlate,\n        cards: this.state.cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    } else if (route === 'postedbyme') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(PostCardList, {\n        cards: this.state.cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    } else if (route === 'reserved') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(PostCardList, {\n        cards: this.state.reserved,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Navegation, {\n        isSignInChange: this.isSignInChange,\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App; // <PostCardList cards = {this.state.cards} />","map":{"version":3,"sources":["/Users/joserodriguez/Desktop/food-chase1/src/App.js"],"names":["React","Navegation","PostCardList","Signin","Register","App","Component","constructor","isSignInChange","state","isSignIn","setState","onRouteChange","route","reservePlate","index","reserved","push","cards","componentDidMount","fetch","then","response","json","data","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navegation from './components/Navegation/Navegation';\nimport PostCardList from './components/PostCardList/PostCardList'\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      isSignIn: false,\n      route: 'signin',\n      cards : [],\n      reserved : []\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(response => response.json())\n    .then(data => this.setState({cards: data}))\n    // this.isSignInChange()\n    // console.log(this.state.isSignIn)\n  }\n\n  isSignInChange = () => {\n    this.state.isSignIn === false \n    ?\n    this.setState({isSignIn: true})\n    // console.log(this.state.isSignIn)\n    :\n    this.setState({isSignIn:false})\n    // console.log(this.state.isSignIn)\n  }\n\n  onRouteChange = (route) =>{\n\n    this.setState({route:route})\n  }\n\n  reservePlate = (index) => {\n    let reserved = []\n    reserved.push(this.state.cards[index])\n    this.setState({reserved:reserved})\n\n    \n  }\n  \n\n  render() {\n    const {route} = this.state;\n    if(route === 'signin'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <Signin isSignInChange= {this.isSignInChange} onRouteChange = {this.onRouteChange}/>\n        </div>\n      )\n    }else if (route === 'register'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <Register isSignInChange = {this.isSignInChange} onRouteChange = {this.onRouteChange}/>\n        </div>\n      )\n    }else if(route === 'mealposts'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <PostCardList reservePlate = {this.reservePlate} cards={this.state.cards}/>\n        </div>\n      )\n    }else if(route === 'postedbyme'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <PostCardList cards={this.state.cards}/>\n        </div>\n      )\n    }else if(route === 'reserved'){\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n          <PostCardList cards={this.state.reserved}/>\n        </div>\n      )\n    }else{\n      return(\n        <div>\n          <Navegation isSignInChange = {this.isSignInChange} onRouteChange ={this.onRouteChange} isSignedIn = {this.state.isSignIn}/>\n        </div>\n      )\n    }\n  }  \n}\n\nexport default App;\n// <PostCardList cards = {this.state.cards} />\n"]},"metadata":{},"sourceType":"module"}